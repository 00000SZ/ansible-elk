---
#
# Install/run kibana
#

- name: Check for epel
  shell: rpm -qa | grep -q epel-release
  ignore_errors: true
  register: epel_installed

- name: Install epel repo
  command: rpm -ivh {{ epel_repo }}
  become: true
  when: epel_installed.rc != 0

- name: Copy kibana yum repo file
  copy:
    src=kibana.repo
    dest=/etc/yum.repos.d/kibana.repo
    owner=root
    group=root
    mode=0644
  become: true

# We need to insert data to create initial an initial index, query if it exists
- name: Query index status
  shell: curl -GET http://localhost:9200/_cat/indices 2>/dev/null | grep yellow | wc -l
  ignore_errors: true
  register: elasticsearch_no_index_present

# Populate with our own logs
- name: Populate elasticsearch index with local logs
  shell: cat /var/log/messages | /opt/logstash/bin/logstash -f /etc/logstash/conf.d/10-syslog.conf
  when: elasticsearch_no_index_present.stdout|int == 1
- name: Install kibana rpms
  yum: name={{ item }} state=present
  become: true
  with_items:
    - kibana

- name: Check Kibana users
  stat: path=/etc/nginx/htpasswd.users
  ignore_errors: true
  register: kibana_user_pwfile_exists

- name: Create kibana admin user
  command: htpasswd -b -c /etc/nginx/htpasswd.users admin admin
  ignore_errors: true
  when: kibana_user_pwfile_exists != 0 

- name: Setup kibana service
  service: name=kibana state=started enabled=true
  become: true

- name: Check Filebeat forwarder SSL certificate
  stat: path=/etc/pki/tls/certs/filebeat-forwarder.crt
  ignore_errors: true
  register: filebeat_forwarder_ssl_exists

# These will be filebeat client certificates
- name: Create Filebeat Forwarder SSL certificate
  command: openssl req -subj '/CN={{ansible_hostname}}/' -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout \
          /etc/pki/tls/private/filebeat-forwarder.key -out /etc/pki/tls/certs/filebeat-forwarder.crt
  ignore_errors: true
  when: filebeat_forwarder_ssl_exists != 0 

- name: Check Filebeat forwarder SSL certificate copy
  stat: path=/usr/share/nginx/html/filebeat-forwarder.crt
  ignore_errors: true
  register: filebeat_forwarder_ssl_client_copy_exists

- name: Copy Filebeat forwarder SSL certificate
  command: cp /etc/pki/tls/certs/filebeat-forwarder.crt /usr/share/nginx/html/filebeat-forwarder.crt
  ignore_errors: true
  when: filebeat_forwarder_ssl_client_copy_exists != 0

- name: Print SSL post-setup information
  debug: msg="Filebeat SSL Certificate available at http://{{ ansible_hostname }}:8080/filebeat-forwarder.crt"

- name: Print post-setup URL  
  debug: msg="*** ELK Services available at http://{{ ansible_hostname }}/ ***"

- name: Print index creation instructions
  debug: msg="** Navigate to http://{{ ansible_hostname }} and click 'create' on the green index button ***"
